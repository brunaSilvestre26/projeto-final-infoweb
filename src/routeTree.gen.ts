/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SourcesImport } from './routes/sources'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as AuthedImport } from './routes/_authed'
import { Route as ArticleIdImport } from './routes/$articleId'
import { Route as IndexImport } from './routes/index'
import { Route as TagTagNameImport } from './routes/tag/$tagName'
import { Route as AuthedProfileImport } from './routes/_authed/profile'
import { Route as AuthedAdminIndexImport } from './routes/_authed/admin/index'
import { Route as AuthedAdminSourcesImport } from './routes/_authed/admin/sources'
import { Route as AuthedAdminSettingsImport } from './routes/_authed/admin/settings'
import { Route as AuthedAdminCreateImport } from './routes/_authed/admin/create'
import { Route as AuthedAdminCategoriesImport } from './routes/_authed/admin/categories'
import { Route as AuthedAdminAccountsImport } from './routes/_authed/admin/accounts'

// Create/Update Routes

const SourcesRoute = SourcesImport.update({
  id: '/sources',
  path: '/sources',
  getParentRoute: () => rootRoute,
} as any)

const LogoutRoute = LogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const ArticleIdRoute = ArticleIdImport.update({
  id: '/$articleId',
  path: '/$articleId',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TagTagNameRoute = TagTagNameImport.update({
  id: '/tag/$tagName',
  path: '/tag/$tagName',
  getParentRoute: () => rootRoute,
} as any)

const AuthedProfileRoute = AuthedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminIndexRoute = AuthedAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminSourcesRoute = AuthedAdminSourcesImport.update({
  id: '/admin/sources',
  path: '/admin/sources',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminSettingsRoute = AuthedAdminSettingsImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminCreateRoute = AuthedAdminCreateImport.update({
  id: '/admin/create',
  path: '/admin/create',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminCategoriesRoute = AuthedAdminCategoriesImport.update({
  id: '/admin/categories',
  path: '/admin/categories',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminAccountsRoute = AuthedAdminAccountsImport.update({
  id: '/admin/accounts',
  path: '/admin/accounts',
  getParentRoute: () => AuthedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$articleId': {
      id: '/$articleId'
      path: '/$articleId'
      fullPath: '/$articleId'
      preLoaderRoute: typeof ArticleIdImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/sources': {
      id: '/sources'
      path: '/sources'
      fullPath: '/sources'
      preLoaderRoute: typeof SourcesImport
      parentRoute: typeof rootRoute
    }
    '/_authed/profile': {
      id: '/_authed/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthedProfileImport
      parentRoute: typeof AuthedImport
    }
    '/tag/$tagName': {
      id: '/tag/$tagName'
      path: '/tag/$tagName'
      fullPath: '/tag/$tagName'
      preLoaderRoute: typeof TagTagNameImport
      parentRoute: typeof rootRoute
    }
    '/_authed/admin/accounts': {
      id: '/_authed/admin/accounts'
      path: '/admin/accounts'
      fullPath: '/admin/accounts'
      preLoaderRoute: typeof AuthedAdminAccountsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/categories': {
      id: '/_authed/admin/categories'
      path: '/admin/categories'
      fullPath: '/admin/categories'
      preLoaderRoute: typeof AuthedAdminCategoriesImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/create': {
      id: '/_authed/admin/create'
      path: '/admin/create'
      fullPath: '/admin/create'
      preLoaderRoute: typeof AuthedAdminCreateImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/settings': {
      id: '/_authed/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AuthedAdminSettingsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/sources': {
      id: '/_authed/admin/sources'
      path: '/admin/sources'
      fullPath: '/admin/sources'
      preLoaderRoute: typeof AuthedAdminSourcesImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/': {
      id: '/_authed/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthedAdminIndexImport
      parentRoute: typeof AuthedImport
    }
  }
}

// Create and export the route tree

interface AuthedRouteChildren {
  AuthedProfileRoute: typeof AuthedProfileRoute
  AuthedAdminAccountsRoute: typeof AuthedAdminAccountsRoute
  AuthedAdminCategoriesRoute: typeof AuthedAdminCategoriesRoute
  AuthedAdminCreateRoute: typeof AuthedAdminCreateRoute
  AuthedAdminSettingsRoute: typeof AuthedAdminSettingsRoute
  AuthedAdminSourcesRoute: typeof AuthedAdminSourcesRoute
  AuthedAdminIndexRoute: typeof AuthedAdminIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedProfileRoute: AuthedProfileRoute,
  AuthedAdminAccountsRoute: AuthedAdminAccountsRoute,
  AuthedAdminCategoriesRoute: AuthedAdminCategoriesRoute,
  AuthedAdminCreateRoute: AuthedAdminCreateRoute,
  AuthedAdminSettingsRoute: AuthedAdminSettingsRoute,
  AuthedAdminSourcesRoute: AuthedAdminSourcesRoute,
  AuthedAdminIndexRoute: AuthedAdminIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$articleId': typeof ArticleIdRoute
  '': typeof AuthedRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/sources': typeof SourcesRoute
  '/profile': typeof AuthedProfileRoute
  '/tag/$tagName': typeof TagTagNameRoute
  '/admin/accounts': typeof AuthedAdminAccountsRoute
  '/admin/categories': typeof AuthedAdminCategoriesRoute
  '/admin/create': typeof AuthedAdminCreateRoute
  '/admin/settings': typeof AuthedAdminSettingsRoute
  '/admin/sources': typeof AuthedAdminSourcesRoute
  '/admin': typeof AuthedAdminIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$articleId': typeof ArticleIdRoute
  '': typeof AuthedRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/sources': typeof SourcesRoute
  '/profile': typeof AuthedProfileRoute
  '/tag/$tagName': typeof TagTagNameRoute
  '/admin/accounts': typeof AuthedAdminAccountsRoute
  '/admin/categories': typeof AuthedAdminCategoriesRoute
  '/admin/create': typeof AuthedAdminCreateRoute
  '/admin/settings': typeof AuthedAdminSettingsRoute
  '/admin/sources': typeof AuthedAdminSourcesRoute
  '/admin': typeof AuthedAdminIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$articleId': typeof ArticleIdRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/sources': typeof SourcesRoute
  '/_authed/profile': typeof AuthedProfileRoute
  '/tag/$tagName': typeof TagTagNameRoute
  '/_authed/admin/accounts': typeof AuthedAdminAccountsRoute
  '/_authed/admin/categories': typeof AuthedAdminCategoriesRoute
  '/_authed/admin/create': typeof AuthedAdminCreateRoute
  '/_authed/admin/settings': typeof AuthedAdminSettingsRoute
  '/_authed/admin/sources': typeof AuthedAdminSourcesRoute
  '/_authed/admin/': typeof AuthedAdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$articleId'
    | ''
    | '/about'
    | '/login'
    | '/logout'
    | '/sources'
    | '/profile'
    | '/tag/$tagName'
    | '/admin/accounts'
    | '/admin/categories'
    | '/admin/create'
    | '/admin/settings'
    | '/admin/sources'
    | '/admin'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$articleId'
    | ''
    | '/about'
    | '/login'
    | '/logout'
    | '/sources'
    | '/profile'
    | '/tag/$tagName'
    | '/admin/accounts'
    | '/admin/categories'
    | '/admin/create'
    | '/admin/settings'
    | '/admin/sources'
    | '/admin'
  id:
    | '__root__'
    | '/'
    | '/$articleId'
    | '/_authed'
    | '/about'
    | '/login'
    | '/logout'
    | '/sources'
    | '/_authed/profile'
    | '/tag/$tagName'
    | '/_authed/admin/accounts'
    | '/_authed/admin/categories'
    | '/_authed/admin/create'
    | '/_authed/admin/settings'
    | '/_authed/admin/sources'
    | '/_authed/admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ArticleIdRoute: typeof ArticleIdRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  SourcesRoute: typeof SourcesRoute
  TagTagNameRoute: typeof TagTagNameRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ArticleIdRoute: ArticleIdRoute,
  AuthedRoute: AuthedRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  SourcesRoute: SourcesRoute,
  TagTagNameRoute: TagTagNameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$articleId",
        "/_authed",
        "/about",
        "/login",
        "/logout",
        "/sources",
        "/tag/$tagName"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$articleId": {
      "filePath": "$articleId.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/profile",
        "/_authed/admin/accounts",
        "/_authed/admin/categories",
        "/_authed/admin/create",
        "/_authed/admin/settings",
        "/_authed/admin/sources",
        "/_authed/admin/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/sources": {
      "filePath": "sources.tsx"
    },
    "/_authed/profile": {
      "filePath": "_authed/profile.tsx",
      "parent": "/_authed"
    },
    "/tag/$tagName": {
      "filePath": "tag/$tagName.tsx"
    },
    "/_authed/admin/accounts": {
      "filePath": "_authed/admin/accounts.tsx",
      "parent": "/_authed"
    },
    "/_authed/admin/categories": {
      "filePath": "_authed/admin/categories.tsx",
      "parent": "/_authed"
    },
    "/_authed/admin/create": {
      "filePath": "_authed/admin/create.tsx",
      "parent": "/_authed"
    },
    "/_authed/admin/settings": {
      "filePath": "_authed/admin/settings.tsx",
      "parent": "/_authed"
    },
    "/_authed/admin/sources": {
      "filePath": "_authed/admin/sources.tsx",
      "parent": "/_authed"
    },
    "/_authed/admin/": {
      "filePath": "_authed/admin/index.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
