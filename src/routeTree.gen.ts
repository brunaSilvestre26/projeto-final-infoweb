/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as FontesImport } from './routes/fontes'
import { Route as AboutImport } from './routes/about'
import { Route as AuthedImport } from './routes/_authed'
import { Route as ArticleIdImport } from './routes/$articleId'
import { Route as IndexImport } from './routes/index'
import { Route as TagTagNameImport } from './routes/tag/$tagName'
import { Route as AuthedProfileImport } from './routes/_authed/profile'
import { Route as AuthedAdminIndexImport } from './routes/_authed/admin/index'
import { Route as AuthedAdminTagsImport } from './routes/_authed/admin/tags'
import { Route as AuthedAdminFontesImport } from './routes/_authed/admin/fontes'
import { Route as AuthedAdminCriarImport } from './routes/_authed/admin/criar'
import { Route as AuthedAdminContasImport } from './routes/_authed/admin/contas'
import { Route as AuthedAdminEditArticleIdImport } from './routes/_authed/admin/edit/$articleId'

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const FontesRoute = FontesImport.update({
  id: '/fontes',
  path: '/fontes',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthedRoute = AuthedImport.update({
  id: '/_authed',
  getParentRoute: () => rootRoute,
} as any)

const ArticleIdRoute = ArticleIdImport.update({
  id: '/$articleId',
  path: '/$articleId',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TagTagNameRoute = TagTagNameImport.update({
  id: '/tag/$tagName',
  path: '/tag/$tagName',
  getParentRoute: () => rootRoute,
} as any)

const AuthedProfileRoute = AuthedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminIndexRoute = AuthedAdminIndexImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminTagsRoute = AuthedAdminTagsImport.update({
  id: '/admin/tags',
  path: '/admin/tags',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminFontesRoute = AuthedAdminFontesImport.update({
  id: '/admin/fontes',
  path: '/admin/fontes',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminCriarRoute = AuthedAdminCriarImport.update({
  id: '/admin/criar',
  path: '/admin/criar',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminContasRoute = AuthedAdminContasImport.update({
  id: '/admin/contas',
  path: '/admin/contas',
  getParentRoute: () => AuthedRoute,
} as any)

const AuthedAdminEditArticleIdRoute = AuthedAdminEditArticleIdImport.update({
  id: '/admin/edit/$articleId',
  path: '/admin/edit/$articleId',
  getParentRoute: () => AuthedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$articleId': {
      id: '/$articleId'
      path: '/$articleId'
      fullPath: '/$articleId'
      preLoaderRoute: typeof ArticleIdImport
      parentRoute: typeof rootRoute
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/fontes': {
      id: '/fontes'
      path: '/fontes'
      fullPath: '/fontes'
      preLoaderRoute: typeof FontesImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/_authed/profile': {
      id: '/_authed/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthedProfileImport
      parentRoute: typeof AuthedImport
    }
    '/tag/$tagName': {
      id: '/tag/$tagName'
      path: '/tag/$tagName'
      fullPath: '/tag/$tagName'
      preLoaderRoute: typeof TagTagNameImport
      parentRoute: typeof rootRoute
    }
    '/_authed/admin/contas': {
      id: '/_authed/admin/contas'
      path: '/admin/contas'
      fullPath: '/admin/contas'
      preLoaderRoute: typeof AuthedAdminContasImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/criar': {
      id: '/_authed/admin/criar'
      path: '/admin/criar'
      fullPath: '/admin/criar'
      preLoaderRoute: typeof AuthedAdminCriarImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/fontes': {
      id: '/_authed/admin/fontes'
      path: '/admin/fontes'
      fullPath: '/admin/fontes'
      preLoaderRoute: typeof AuthedAdminFontesImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/tags': {
      id: '/_authed/admin/tags'
      path: '/admin/tags'
      fullPath: '/admin/tags'
      preLoaderRoute: typeof AuthedAdminTagsImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/': {
      id: '/_authed/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthedAdminIndexImport
      parentRoute: typeof AuthedImport
    }
    '/_authed/admin/edit/$articleId': {
      id: '/_authed/admin/edit/$articleId'
      path: '/admin/edit/$articleId'
      fullPath: '/admin/edit/$articleId'
      preLoaderRoute: typeof AuthedAdminEditArticleIdImport
      parentRoute: typeof AuthedImport
    }
  }
}

// Create and export the route tree

interface AuthedRouteChildren {
  AuthedProfileRoute: typeof AuthedProfileRoute
  AuthedAdminContasRoute: typeof AuthedAdminContasRoute
  AuthedAdminCriarRoute: typeof AuthedAdminCriarRoute
  AuthedAdminFontesRoute: typeof AuthedAdminFontesRoute
  AuthedAdminTagsRoute: typeof AuthedAdminTagsRoute
  AuthedAdminIndexRoute: typeof AuthedAdminIndexRoute
  AuthedAdminEditArticleIdRoute: typeof AuthedAdminEditArticleIdRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedProfileRoute: AuthedProfileRoute,
  AuthedAdminContasRoute: AuthedAdminContasRoute,
  AuthedAdminCriarRoute: AuthedAdminCriarRoute,
  AuthedAdminFontesRoute: AuthedAdminFontesRoute,
  AuthedAdminTagsRoute: AuthedAdminTagsRoute,
  AuthedAdminIndexRoute: AuthedAdminIndexRoute,
  AuthedAdminEditArticleIdRoute: AuthedAdminEditArticleIdRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$articleId': typeof ArticleIdRoute
  '': typeof AuthedRouteWithChildren
  '/about': typeof AboutRoute
  '/fontes': typeof FontesRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/profile': typeof AuthedProfileRoute
  '/tag/$tagName': typeof TagTagNameRoute
  '/admin/contas': typeof AuthedAdminContasRoute
  '/admin/criar': typeof AuthedAdminCriarRoute
  '/admin/fontes': typeof AuthedAdminFontesRoute
  '/admin/tags': typeof AuthedAdminTagsRoute
  '/admin': typeof AuthedAdminIndexRoute
  '/admin/edit/$articleId': typeof AuthedAdminEditArticleIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$articleId': typeof ArticleIdRoute
  '': typeof AuthedRouteWithChildren
  '/about': typeof AboutRoute
  '/fontes': typeof FontesRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/profile': typeof AuthedProfileRoute
  '/tag/$tagName': typeof TagTagNameRoute
  '/admin/contas': typeof AuthedAdminContasRoute
  '/admin/criar': typeof AuthedAdminCriarRoute
  '/admin/fontes': typeof AuthedAdminFontesRoute
  '/admin/tags': typeof AuthedAdminTagsRoute
  '/admin': typeof AuthedAdminIndexRoute
  '/admin/edit/$articleId': typeof AuthedAdminEditArticleIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$articleId': typeof ArticleIdRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/about': typeof AboutRoute
  '/fontes': typeof FontesRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/_authed/profile': typeof AuthedProfileRoute
  '/tag/$tagName': typeof TagTagNameRoute
  '/_authed/admin/contas': typeof AuthedAdminContasRoute
  '/_authed/admin/criar': typeof AuthedAdminCriarRoute
  '/_authed/admin/fontes': typeof AuthedAdminFontesRoute
  '/_authed/admin/tags': typeof AuthedAdminTagsRoute
  '/_authed/admin/': typeof AuthedAdminIndexRoute
  '/_authed/admin/edit/$articleId': typeof AuthedAdminEditArticleIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$articleId'
    | ''
    | '/about'
    | '/fontes'
    | '/login'
    | '/logout'
    | '/profile'
    | '/tag/$tagName'
    | '/admin/contas'
    | '/admin/criar'
    | '/admin/fontes'
    | '/admin/tags'
    | '/admin'
    | '/admin/edit/$articleId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$articleId'
    | ''
    | '/about'
    | '/fontes'
    | '/login'
    | '/logout'
    | '/profile'
    | '/tag/$tagName'
    | '/admin/contas'
    | '/admin/criar'
    | '/admin/fontes'
    | '/admin/tags'
    | '/admin'
    | '/admin/edit/$articleId'
  id:
    | '__root__'
    | '/'
    | '/$articleId'
    | '/_authed'
    | '/about'
    | '/fontes'
    | '/login'
    | '/logout'
    | '/_authed/profile'
    | '/tag/$tagName'
    | '/_authed/admin/contas'
    | '/_authed/admin/criar'
    | '/_authed/admin/fontes'
    | '/_authed/admin/tags'
    | '/_authed/admin/'
    | '/_authed/admin/edit/$articleId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ArticleIdRoute: typeof ArticleIdRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  AboutRoute: typeof AboutRoute
  FontesRoute: typeof FontesRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  TagTagNameRoute: typeof TagTagNameRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ArticleIdRoute: ArticleIdRoute,
  AuthedRoute: AuthedRouteWithChildren,
  AboutRoute: AboutRoute,
  FontesRoute: FontesRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  TagTagNameRoute: TagTagNameRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$articleId",
        "/_authed",
        "/about",
        "/fontes",
        "/login",
        "/logout",
        "/tag/$tagName"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$articleId": {
      "filePath": "$articleId.tsx"
    },
    "/_authed": {
      "filePath": "_authed.tsx",
      "children": [
        "/_authed/profile",
        "/_authed/admin/contas",
        "/_authed/admin/criar",
        "/_authed/admin/fontes",
        "/_authed/admin/tags",
        "/_authed/admin/",
        "/_authed/admin/edit/$articleId"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/fontes": {
      "filePath": "fontes.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/_authed/profile": {
      "filePath": "_authed/profile.tsx",
      "parent": "/_authed"
    },
    "/tag/$tagName": {
      "filePath": "tag/$tagName.tsx"
    },
    "/_authed/admin/contas": {
      "filePath": "_authed/admin/contas.tsx",
      "parent": "/_authed"
    },
    "/_authed/admin/criar": {
      "filePath": "_authed/admin/criar.tsx",
      "parent": "/_authed"
    },
    "/_authed/admin/fontes": {
      "filePath": "_authed/admin/fontes.tsx",
      "parent": "/_authed"
    },
    "/_authed/admin/tags": {
      "filePath": "_authed/admin/tags.tsx",
      "parent": "/_authed"
    },
    "/_authed/admin/": {
      "filePath": "_authed/admin/index.tsx",
      "parent": "/_authed"
    },
    "/_authed/admin/edit/$articleId": {
      "filePath": "_authed/admin/edit/$articleId.tsx",
      "parent": "/_authed"
    }
  }
}
ROUTE_MANIFEST_END */
